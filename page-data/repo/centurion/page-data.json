{"componentChunkName":"component---src-pages-repo-centurion-mdx","path":"/repo/centurion/","webpackCompilationHash":"d010cc14166365843071","result":{"data":{"readme":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Centurion\"), mdx(\"p\", null, \"A clean cut UI theme for Sublime Text 2 bastardised from the source code of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/buymeasoda/soda-theme/\"\n  }), \"Soda\"), \".\"), mdx(\"p\", null, \"Centurion was made out of a want for less UI and more code. It's so minimal you can barely see it.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://raw.github.com/allanhortle/Centurion/master/res/Preview.png\",\n    \"alt\": \"Centurion theme\"\n  }))), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, \"Just install through \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://sublime.wbond.net/\"\n  }), \"Package Control\"), \" and make sure to update the theme in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Settings - User\"), \" file with:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"theme\\\": \\\"Centurion.sublime-theme\\\"\"))), mdx(\"p\", null, \"or\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"theme\\\": \\\"CenturionLight.sublime-theme\\\"\"))), mdx(\"p\", null, \"To update the syntax hightlighting using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#galea\"\n  }), \"Galea\"), \" make sure you add following lines into your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Settings - User\"), \" file:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"color_scheme\\\": \\\"Packages/Theme - Centurion/Galea.tmTheme\\\"\"))), mdx(\"p\", null, \"or\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"color_scheme\\\": \\\"Packages/Theme - Centurion/GaleaLight.tmTheme\\\"\"))), mdx(\"h2\", null, \"Customisation\"), mdx(\"p\", null, \"Centurion has a few settings that you can tweaking that you can apply through your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Settings - User\"), \" file. Below is a list of all the properties you can activate. Just boink them into your settings file and toggle at will.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"// Colors\\n\\\"centurion_color_blue\\\": false,\\n\\\"centurion_color_red\\\": false,\\n\\\"centurion_color_yellow\\\": false,\\n\\\"centurion_color_orange\\\": false,\\n\\\"centurion_color_grey\\\": false,\\n\\n// UI\\n\\\"centurion_tab_close_buttons\\\": false,\\n\\\"centurion_tab_scrolling\\\": false,\"))), mdx(\"h2\", null, \"Galea\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://raw.github.com/allanhortle/Centurion/master/res/Galea.png\",\n    \"alt\": \"Centurion theme\"\n  }))), mdx(\"p\", null, \"Centurion now ships with its own syntax highlighting. Galea is a simple theme designed to cut down on the use of color in conflicting locations. There are only five colors, each relating to a high level Textmate scope.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Color\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Scope\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Yellow\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Entity / Tag\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Red\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Support / Keyword\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Orange\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Storage\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Green\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"String\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Blue\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Constant\")))), mdx(\"p\", null, \"Additionally each file's background is tinted to distinguish it's type. Front-end remains grey, backend is blue and data-files are green.\"), mdx(\"h3\", null, \"Bugs\"), mdx(\"p\", null, \"If you like the theme and  find some bugs please do let me know. I've been testing it only with my current pipeline so there are bound to be file types that miss out. Just bug it out and I'll do my best to fix them up.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":true,"frontmatter":{}}}}